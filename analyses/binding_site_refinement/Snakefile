prdm9s = ['PRDM9-A','PRDM9-B','PRDM9-C','PRDM9-D','PRDM9-E','PRDM9-F','PRDM9-G','PRDM9-H','PRDM9-I','PRDM9-J','PRDM9-K','PRDM9-L','PRDM9-M','PRDM9-N']
background_file = "/moto/palab/users/crh2152/projects/CS_vcfs/CornSnake_Genome.bg"
fasta = "../ref_indiv_assembly/fastas/corn/CS_superscaffold.renamed.fasta.masked.fasta"
ks = ["hotspots.farCpGi","hotspots"]

with open("misc_files/repeats_aboveN500.txt", "r") as fh:
    repeats = [line.strip().replace("/",".") for line in fh]

rule all:
    input: 
        #expand("fasta/spots.{kind}.fasta",kind=ks),
        #expand("bsites/og/{allele}/{kind}/{allele}.txt", allele=prdm9s, kind=ks),
        #expand("pwm_comparison_pdfs/{allele}.pdf", allele=prdm9s)
        #expand("bsites/new/{allele}/{kind}", allele=prdm9s, kind=["hotspots"])
        #expand("bsites/new/{allele}/{kind}/corn.prdm9.{allele}.{kind}.bed", allele=prdm9s, kind=["hotspots"])
        #"misc_files/repeats.bed.gz"
        #expand("misc_files/{repeat}.bed.gz", repeat=repeats)
        #"spots_annotated/spots_annotated.bed.gz"
        expand("bsites/new/{prdm9}/lrt/corn.prdm9.{prdm9}.ltr.bed", prdm9=prdm9s)

rule prepare_fasta_spots:
    input: 
        bed = "spots/corn.{kind}.bed",
        fasta = fasta
    output: 
        "fasta/spots.{kind}.fasta" 
    shell: 
        """
        awk '{{print $1":"$2"-"$3}}' {input.bed} \
        | tail -n+2 \#         | xargs samtools faidx {input.fasta} \
        | sed 's/:/_/g;s/-/_/g' > {output}
        """

rule predict_og_bsites_in_spots:
    input: 
        meme_pwm = "pwms/{allele}_PWM_meme.txt",
        pwm = "pwms/{allele}_PWM.txt",
        bgs = background_file,
        fasta = "fasta/spots.{kind}.fasta"
    output: 
        diry = directory("bsites/og/{allele}/{kind}/"),
        pwm = "bsites/og/{allele}/{kind}/{allele}.txt",
        new_pdf = "bsites/og/{allele}/{kind}/{allele}.new.pdf",
        og_pdf = "bsites/og/{allele}/{kind}/{allele}.og.pdf",
        meme_pwm = "bsites/og/{allele}/{kind}/{allele}_meme.txt"
    resources:
        time = 20,
        cpus = 1
    shell: 
        "fimo --max-stored-scores 30000000 --thresh 1e-4 -bgfile {input.bgs} "
        "-oc {output.diry} -verbosity 3 {input.meme_pwm} {input.fasta};"
        "cat bsites/og/{wildcards.allele}/{wildcards.kind}/fimo.gff "
        "| python scripts/pwm_from_fimo_gff.py > {output.pwm};"
        "cat {input.pwm} | python scripts/pwm_plot.py -o {output.og_pdf};"
        "cat {output.pwm} | python scripts/pwm_plot.py -o {output.new_pdf};"
        "cat {output.pwm} | uniprobe2meme -pseudo 1 -bg {input.bgs} > {output.meme_pwm}"

rule predict_new_bsites_in_genome:
    input: 
        meme_pwm = "bsites/og/{allele}/{kind}/{allele}_meme.txt",
        bgs = background_file,
        fasta = fasta
    output: 
        diry = directory("bsites/new/{allele}/{kind}"),
    resources:
        time = 23*60,
        cpus = 1
    shell: 
        "fimo --max-stored-scores 30000000 --thresh 1e-5 -bgfile {input.bgs} "
        "-oc {output.diry} -verbosity 3 {input.meme_pwm} {input.fasta};"

rule convert_bsites_to_bed:
    input: 
        "bsites/new/{allele}/{kind}/fimo.gff"
    output: 
        "bsites/new/{allele}/{kind}/corn.prdm9.{allele}.{kind}.bed"
    shell: 
        """
        tail -n+2 {input} \
        | cut -f1,4,5,9 \
        | awk '{{split($4, a, ";");print $1"\t"$2"\t"$3"\t"a[4]}}' \
        | bedtools sort -i - \
        | bedtools merge -i - > {output}
        """

rule plot_motif_comparisons:
    input: 
        og = "pwms/{allele}_PWM.txt",
        hot = "bsites/og/{allele}/hotspots/{allele}.txt",
        hotfarCpg = "bsites/og/{allele}/hotspots.farCpGi/{allele}.txt"
    output: 
        "pwm_comparison_pdfs/{allele}.pdf"
    shell: 
        "python scripts/plot_freq_corrs.py "
        "-f {input.og},{input.hot},{input.hotfarCpg} "
        "-l original,hot,hotFarCpGi -o {output}"

rule repeats_to_bed:
    input: 
        ["repeats/round{}_hits".format(i) for i in range(1,5)]
    output: 
        bed = "misc_files/repeats.bed.gz",
        tbi = "misc_files/repeats.bed.gz.tbi"
    shell: 
        """
        cat {input} \
        | grep Super \
        | awk '{{print $5"\t"$6"\t"$7"\t"$11}}' \
        | bedtools sort -i - \
        | bgzip > {output.bed};
        tabix -p bed {output.bed};
        """

rule split_repeat_bed:
    input: 
        "misc_files/repeats.bed.gz"
    output: 
        "misc_files/{repeat}.bed.gz"
    params:
        frepeat = lambda wcs: wcs.repeat.replace(".","/")
    shell: 
        """
        zcat {input} \
        | awk -v r='{params.frepeat}' '{{if (($NF==r)) print}}' \
        | bgzip > {output}
        """

rule annotate_spots:
    input: 
        cold = "spots/corn.coldspots.bed",
        hot = "spots/corn.hotspots.bed",
        prdm9 = expand("pwms/{prdm9}_PWM_1E5200k/fimo.bed", prdm9=prdm9s),
        repeats = expand("misc_files/{repeat}.bed.gz", repeat=repeats),
        cpgi = "cpgi/corn.hmm.bed.gz"
    output: 
        "spots_annotated/spots_annotated.bed.gz"
    params:
        file_names = ",".join(prdm9s) + "," + ",".join(repeats) + "," + "cpgi"
    shell: 
        """
        cat <(tail -n+2 {input.cold} | awk '{{print $0"\\t0\\t0"}}') \
            <(cut -f1-3,6 {input.hot}| awk '{{print $0"\\t1"}}') \
        | bedtools annotate -i - -both -files {input.cpgi} {input.prdm9} {input.repeats} \
        | bedtools sort -i - | bgzip > {output}
        """
rule filter_bsites_by_dist2repeats:
    input: 
        "pwms/{prdm9}_PWM_1E5200k/fimo_merged.bed"
    output: 
        "bsites/new/{prdm9}/lrt/corn.prdm9.{prdm9}.ltr.bed"
    shell: 
        "zcat misc_files/LTR*gz misc_files/LINE.*gz "
        "| bedtools sort -i - "
        "| bedtools slop -i - -g gsizes/corn.genome -b 25 "
        "| bedtools merge -i - "
        "| bedtools intersect -a {input} -b - -wa -v "
        "| cut -f1-3 > {output}"



